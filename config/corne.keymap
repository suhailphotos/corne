/*
 * Corne (nice!nano v2)
 * Base: QWERTY with home-row mods
 * Layers: Lower (Numbers/BT/Nav), Raise (Symbols), Nav, Num, Func
 * Photo intent:
 *   - Top-left key: Base=Esc, Raise=Option (LALT). Lower inherits Base.
 *   - Leftmost on row 2: Base=Tab, Raise=Shift (LSHFT). Lower inherits Base.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        // ───────────── 0: Base ─────────────

        default_layer {
            display-name = "Base";
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P          &kp BSPC
&kp TAB    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMICOLON  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        // ───────────── 1: Lower (inherit Esc/Tab) ─────────────

        lower_layer {
            display-name = "Lower";
            bindings = <
&trans     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&trans     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT  &bt BT_CLR    &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                       &kp LGUI      &tog 4        &kp SPACE       &kp RET   &mo 3     &kp RALT
            >;
        };

        // ───────────── 2: Raise (Option on TL, Shift on row2-L) ─────────────

        raise_layer {
            display-name = "Raise";
            bindings = <
&kp LALT   &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &mo 5     &kp SPACE    &kp RET    &mo 3      &kp RALT
            >;
        };

        // ───────────────────────────── 3: Nav (Editing cluster) ────────────

        nav_layer {
            display-name = "Nav";
            bindings = <
&kp TAB  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp DEL      &kp ESC  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp BSPC
&trans   &sk LGUI  &sk LALT   &sk LCTRL  &sk LSHFT  &trans       &trans   &trans    &trans    &trans  &trans     &trans
&trans   &trans    &trans     &trans     &trans     &trans       &trans   &trans    &trans    &trans  &trans     &trans
                              &kp LGUI   &trans     &kp SPACE    &kp RET  &trans    &kp RALT
            >;
        };

        // ───────────────────────────── 4: Num (right-hand numpad) ──────────

        num_layer {
            display-name = "Num";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp N7  &kp N8   &kp N9    &kp FSLH         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N4  &kp N5   &kp N6    &kp KP_MULTIPLY  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N1  &kp N2   &kp N3    &kp MINUS        &trans  &trans
                        &trans  &trans  &trans    &kp N0  &kp DOT  &kp PLUS
            >;
        };

        // ───────────────────────────── 5: Func (F1–F12) ────────────────────

        func_layer {
            display-name = "Func";
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
                          &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

