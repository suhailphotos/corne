/*
 * Corne (nice!nano v2)
 * Base: QWERTY with home-row mods (later)
 * Layers: Lower (Numbers/Arrows), Raise (Symbols), Num, Func & BT
 * Photo intent:
 *   - Top-left key: Base=Esc, Raise=Option (LALT). Lower inherits Base.
 *   - Leftmost on row 2: Base=Tab, Raise=Shift (LSHFT). Lower inherits Base.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        HM: HM {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "hold-preferred";   // reliable chording: hold = Shift
        };

        // ─── Ghostty / iTerm "terminal splits" ─────────────────────────

        split_v: split_v {
            compatible = "zmk,behavior-macro";
            label = "SPLIT_V";
            #binding-cells = <0>;

            // Cmd+Ctrl+Backslash

            bindings = <&sk LGUI &sk LCTRL &kp BACKSLASH>;
        };

        split_h: split_h {
            compatible = "zmk,behavior-macro";
            label = "SPLIT_H";
            #binding-cells = <0>;

            // Cmd+Ctrl+Minus

            bindings = <&sk LGUI &sk LCTRL &kp MINUS>;
        };

        split_x: split_x {
            compatible = "zmk,behavior-macro";
            label = "SPLIT_X";
            #binding-cells = <0>;

            // Cmd+Ctrl+X (close surface in Ghostty)

            bindings = <&sk LGUI &sk LCTRL &kp X>;
        };

        // ─── Neovim splits (type the commands) ─────────────────────────

        nv_vsplit: nv_vsplit {
            compatible = "zmk,behavior-macro";
            label = "NV_VSPLIT";
            #binding-cells = <0>;

            // ESC :vsplit<CR>

            bindings = <&sk LCTRL &kp W &kp V>;   // <C-w> v
        };

        nv_hsplit: nv_hsplit {
            compatible = "zmk,behavior-macro";
            label = "NV_HSPLIT";
            #binding-cells = <0>;

            // ESC :split<CR>

            bindings = <&sk LCTRL &kp W &kp S>;   // <C-w> s
        };

        nv_close: nv_close {
            compatible = "zmk,behavior-macro";
            label = "NV_CLOSE";
            #binding-cells = <0>;

            // ESC :close<CR>  (close current window/split, keep buffer)

            bindings = <&sk LCTRL &kp W &kp C>;   // <C-w> c
        };

        ps_hide_sel: ps_hide_sel {
            compatible = "zmk,behavior-macro";
            label = "PS_HIDE_SEL";
            #binding-cells = <0>;
            bindings = <&sk LGUI &kp H>;   // one-shot Cmd, then H = Cmd+H
        };

        /* ── macOS screenshots ───────────────────────────────────────── */

        ss_full: ss_full {
            compatible = "zmk,behavior-macro";
            label = "SS_FULL";            // Cmd+Shift+3 (full screen → file)
            #binding-cells = <0>;
            bindings = <&sk LGUI &sk LSHFT &kp N3>;
        };

        ss_area: ss_area {
            compatible = "zmk,behavior-macro";
            label = "SS_AREA";            // Cmd+Shift+4 (region select → file)
            #binding-cells = <0>;
            bindings = <&sk LGUI &sk LSHFT &kp N4>;
        };

        ss_ui: ss_ui {
            compatible = "zmk,behavior-macro";
            label = "SS_UI";              // Cmd+Shift+5 (screenshot toolbar)
            #binding-cells = <0>;
            bindings = <&sk LGUI &sk LSHFT &kp N5>;
        };

        ss_full_clip: ss_full_clip {
            compatible = "zmk,behavior-macro";
            label = "SS_FULL_CLIP";       // Cmd+Ctrl+Shift+3 (full → clipboard)
            #binding-cells = <0>;
            bindings = <&sk LGUI &sk LEFT_CONTROL &sk LSHFT &kp N3>;
        };

        ss_area_clip: ss_area_clip {
            compatible = "zmk,behavior-macro";
            label = "SS_AREA_CLIP";       // Cmd+Ctrl+Shift+4 (region → clipboard)
            #binding-cells = <0>;
            bindings = <&sk LGUI &sk LEFT_CONTROL &sk LSHFT &kp N4>;
        };

        ss_window: ss_window {
            compatible = "zmk,behavior-macro";
            label = "SS_WINDOW";          // Cmd+Shift+4, then Space (window capture)
            #binding-cells = <0>;
            bindings = <&sk LGUI &sk LSHFT &kp N4 &kp SPACE>;
        };

        /* ── Spotlight / Launcher categories (all prefix with Cmd+Space) ── */

        spotlight_main: spotlight_main {
            compatible = "zmk,behavior-macro";
            label = "SPOTLIGHT_MAIN";
            #binding-cells = <0>;
            bindings = <&sk LGUI &kp SPACE>;
        };

        spotlight_apps: spotlight_apps {
            compatible = "zmk,behavior-macro";
            label = "SPOTLIGHT_APPS";
            #binding-cells = <0>;
            bindings = <&sk LGUI &kp SPACE &sk LGUI &kp N1>;
        };

        spotlight_files: spotlight_files {
            compatible = "zmk,behavior-macro";
            label = "SPOTLIGHT_FILES";
            #binding-cells = <0>;
            bindings = <&sk LGUI &kp SPACE &sk LGUI &kp N2>;
        };

        spotlight_actions: spotlight_actions {
            compatible = "zmk,behavior-macro";
            label = "SPOTLIGHT_ACTIONS";
            #binding-cells = <0>;
            bindings = <&sk LGUI &kp SPACE &sk LGUI &kp N3>;
        };

        spotlight_clipboard: spotlight_clipboard {
            compatible = "zmk,behavior-macro";
            label = "SPOTLIGHT_CLIPBOARD";
            #binding-cells = <0>;
            bindings = <&sk LGUI &kp SPACE &sk LGUI &kp N4>;
        };

        ps_stamp: ps_stamp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_COMMAND &sk LEFT_ALT &sk LEFT_SHIFT &kp E>;
            label = "PS_STAMP";
        };
    };

    macros {
    };

    combos {
        compatible = "zmk,combos";

        /* ── Right hand = Terminal splits (Ghostty/iTerm) ───────── */

        combo_term_close: combo_term_x {
            bindings = <&split_x>;
            key-positions = <18 19>;   // H + J
            layers = <2>;              // Raise only
            timeout-ms = <40>;
        };

        combo_term_v: combo_term_v {
            bindings = <&split_v>;
            key-positions = <19 20>;   // J + K
            layers = <2>;
            timeout-ms = <40>;
        };

        combo_term_h: combo_term_h {
            bindings = <&split_h>;
            key-positions = <20 21>;   // K + L
            layers = <2>;
            timeout-ms = <40>;
        };

        /* ── Left hand = Neovim splits ─────────────────────────── */

        combo_nv_hsplit: combo_nv_hsplit {
            bindings = <&nv_hsplit>;
            key-positions = <14 15>;   // S + D
            layers = <2>;
            timeout-ms = <40>;
        };

        combo_nv_vsplit: combo_nv_vsplit {
            bindings = <&nv_vsplit>;
            key-positions = <15 16>;   // D + F
            layers = <2>;
            timeout-ms = <40>;
        };

        combo_nv_close: combo_nv_close {
            bindings = <&nv_close>;
            key-positions = <16 17>;   // F + G
            layers = <2>;
            timeout-ms = <40>;
        };

        /* Base-layer: holdable Left Option via Z+X (safe for ⌥-drag in PS) */

        combo_alt_hold_zx {
            bindings = <&kp LALT>;      // holds while A+Q are held
            key-positions = <25 26>;
            layers = <0 6>;               // base only
            timeout-ms = <35>;
        };

        /* Base-layer: Q+W+E -> Cmd+Opt+Shift+E (Stamp Visible) */

        combo_ps_stamp_qwe {
            bindings = <&ps_stamp>;
            key-positions = <1 2 3>;
            layers = <0 6>;
            timeout-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ───────────── 0: Base ─────────────

        default_layer {
            display-name = "Base";
            bindings = <
&kp ESC               &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P          &kp BSPC
&HM LEFT_CONTROL TAB  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT        &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                                    &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        // ───────────── 1: Lower (Numbers/BT/Arrows) ─────────────

        lower_layer {
            display-name = "Lower";
            bindings = <
&kp GRAVE           &kp N1                &kp N2            &kp N3           &kp N4           &kp N5       &kp N6          &kp N7             &kp N8           &kp N9      &kp N0         &kp MINUS
&spotlight_actions  &spotlight_clipboard  &spotlight_files  &spotlight_main  &spotlight_apps  &kp PLUS     &kp LEFT        &kp DOWN           &kp UP           &kp RIGHT   &kp KP_DIVIDE  &kp KP_MULTIPLY
&tog 6              &tog 3                &tog 5            &ss_full         &ss_area         &kp EQUAL    &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &kp C_MUTE     &kp C_PP
                                                            &kp LGUI         &trans           &kp SPACE    &kp RET         &mo 4              &kp RALT
            >;
        };

        // ───────────── 2: Raise (Symbols) ───────────

        raise_layer {
            display-name = "Raise";
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp DOLLAR         &kp PERCENT    &kp CARET         &kp AMPERSAND      &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&kp GRAVE  &kp SEMICOLON    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp PLUS       &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PIPE       &kp BACKSLASH         &kp COLON              &kp DOUBLE_QUOTES
&kp CAPS   &kp SLASH        &kp COMMA             &kp PERIOD             &kp SINGLE_QUOTE   &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LESS_THAN  &kp GREATER_THAN      &kp QUESTION           &trans
                                                  &kp LGUI               &trans             &kp SPACE      &kp RET           &trans             &kp RALT
            >;
        };

        // ───────────── 3: Num (right-hand numpad + nav keys) ──────────

        num_layer {
            display-name = "Num";
            bindings = <
&tog 3  &trans  &trans  &trans  &trans  &trans    &kp HOME       &kp N7        &kp N8        &kp N9        &kp MINUS  &kp KP_DIVIDE
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_UP    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS   &kp KP_MULTIPLY
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_DOWN  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &kp END
                        &trans  &trans  &trans    &kp ENTER      &kp N0        &kp PERIOD
            >;
        };

        // ───────────── 4: Func (F1–F12) ──────────

        func_layer {
            display-name = "Func";
            bindings = <
&trans      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6          &kp F7         &kp F8         &kp F9         &kp F10        &trans
&trans      &kp F11       &kp F12       &kp F13       &kp F14       &kp F15         &kp F16         &kp F17        &kp F18        &kp F19        &kp F20        &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR_ALL  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4
                                        &trans        &trans        &trans          &trans          &trans         &trans
            >;
        };

        // ───────────── 5: Mouse (one-hand use on right side) ──────────

        mouse {
            display-name = "Mouse";
            bindings = <
&tog 5  &trans  &trans  &trans  &trans  &trans    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mkp MB4        &mkp MB5        &trans        &trans           &trans  &trans
                        &trans  &trans  &trans    &mkp LCLK       &mkp RCLK       &mkp MCLK
            >;
        };

        // ───────────── 6: Art (Photoshop; right-hand numbers for opacity/flow) ──────────

        art {
            display-name = "Art";
            bindings = <
&tog 6          &kp Q  &kp D  &kp E     &kp LEFT_BRACE    &kp RIGHT_BRACE      &trans     &kp N7        &kp N8        &kp N9        &none  &none
&kp LEFT_ALT    &kp J  &kp S  &kp BSPC  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &trans     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none  &none
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C     &ps_hide_sel      &kp B                &trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &none
                              &kp LGUI  &none             &kp SPACE            &kp ENTER  &kp N0        &kp PERIOD
            >;
        };
    };
};

